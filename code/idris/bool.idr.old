-- total functions
-- block comments
-- symbolic arguments
-- pattern matching: any argument

module bool

import pair

data bool = true | false

id: bool -> bool
id b = b

constFalse: bool -> bool
constFalse _ = false

constTrue: bool -> bool
constTrue _ = true

not: bool -> bool
not true = false
not _ = true

andp: pair bool bool -> bool
andp (mkPair true true) = true
andp (mkPair _ _) = false

orp: pair bool bool -> bool
orp (mkPair false false) = false
orp (mkPair _ _) = true

nandp: pair bool bool -> bool
nandp (mkPair  true true) = false
nandp (mkPair _ _) = true

xorp: pair bool bool -> bool
xorp (mkPair true false) = true
xorp (mkPair false true) = true
xorp (mkPair _ _) = false

---Exam Problem #2: There are 16  possible ways to fill in the result
  ---column for a truth table for a binary Boolean function, and there
    ---are thus exactly 16 such functions, and no more.

pand: bool -> bool -> bool
pand true = bool.id
pand false = constFalse

por: bool -> bool -> bool
por true = constTrue
por false = bool.id

pxor: bool -> bool -> bool
pxor true = not
pxor false = bool.id

pnand: bool -> bool -> bool
pnand true = not
pnand false = constTrue
